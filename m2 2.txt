DROP TABLE IF EXISTS Feedback;
DROP TABLE IF EXISTS Events;

CREATE TABLE Events (
    event_id INT PRIMARY KEY,
    title VARCHAR(200),
    description TEXT,
    city VARCHAR(100),
    start_date DATETIME,
    end_date DATETIME,
    status ENUM('upcoming', 'completed', 'cancelled'),
    organizer_id INT
);

CREATE TABLE Feedback (
    feedback_id INT PRIMARY KEY,
    user_id INT,
    event_id INT,
    rating INT,
    comments TEXT,
    feedback_date DATE
);

INSERT INTO Events (event_id, title, description, city, start_date, end_date, status, organizer_id) VALUES
(1, 'Tech Innovators Meetup', 'A meetup for tech enthusiasts.', 'New York', '2025-06-10 10:00:00', '2025-06-10 16:00:00', 'upcoming', 1),
(2, 'AI & ML Conference', 'Conference on AI and ML.', 'Chicago', '2025-05-15 09:00:00', '2025-05-15 17:00:00', 'completed', 3),
(3, 'Frontend Development Bootcamp', 'Frontend training.', 'Los Angeles', '2025-07-01 10:00:00', '2025-07-03 16:00:00', 'upcoming', 2);

INSERT INTO Feedback (feedback_id, user_id, event_id, rating, comments, feedback_date) VALUES
(1, 1, 2, 4, 'Good', '2025-05-16'),
(2, 2, 2, 5, 'Excellent', '2025-05-16'),
(3, 3, 2, 4, 'Nice', '2025-05-16'),
(4, 4, 2, 5, 'Well done', '2025-05-16'),
(5, 5, 2, 4, 'Great', '2025-05-16'),
(6, 1, 2, 4, 'Solid', '2025-05-16'),
(7, 2, 2, 5, 'Awesome', '2025-05-16'),
(8, 3, 2, 4, 'Helpful', '2025-05-16'),
(9, 4, 2, 5, 'Impressive', '2025-05-16'),
(10, 5, 2, 4, 'Useful', '2025-05-16'),
(11, 1, 1, 3, 'Average', '2025-06-11');

SELECT 
    e.title,
    ROUND(AVG(f.rating), 2) AS average_rating,
    COUNT(f.feedback_id) AS total_feedbacks
FROM 
    Events e
JOIN 
    Feedback f ON e.event_id = f.event_id
GROUP BY 
    e.event_id
HAVING 
    COUNT(f.feedback_id) >= 10
ORDER BY 
    average_rating DESC;
